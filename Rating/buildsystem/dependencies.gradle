allprojects {
    repositories {
        jcenter()
    }
}

ext {
    //Android
    androidBuildToolsVersion = "21.1.2"
    androidMinSdkVersion = 10
    androidTargetSdkVersion = 21
    androidCompileSdkVersion = 21
    androidVersionCode = 1
    androidVersionName = "1.0"

    //Libraries
    daggerVersion = '2.0.2'
    butterKnifeVersion = '6.1.0'
    recyclerViewVersion = '22.2.1'
    rxJavaVersion = '1.0.16'
    rxAndroidVersion = '1.0.1'
    javaxAnnotationVersion = '1.2'
    gsonVersion = '2.3'
    okHttpVersion = '2.3.0'
    androidAnnotationsVersion = '23.1.1'
    retrofitVersion = "2.0.0-beta2"
    retrofitConvertGsonVersion = "2.0.0-beta2"
    greenDaoVersion = "1.3.7"
    supportV4Version = "23.1.1"

    //Testing
    robolectricVersion = '3.0'
    jUnitVersion = '4.12'
    assertJVersion = '1.7.1'
    mockitoVersion = '1.9.5'
    dexmakerVersion = '1.0'
    espressoVersion = '2.0'
    testingSupportLibVersion = '0.1'


    presentationDependencies = [
            daggerCompiler:     "com.google.dagger:dagger-compiler:${daggerVersion}",
            dagger:             "com.google.dagger:dagger:${daggerVersion}",
            butterKnife:        "com.jakewharton:butterknife:${butterKnifeVersion}",
            recyclerView:       "com.android.support:recyclerview-v7:${recyclerViewVersion}",
            rxJava:             "io.reactivex:rxjava:${rxJavaVersion}",
            rxAndroid:          "io.reactivex:rxandroid:${rxAndroidVersion}",
            javaxAnnotation:    "javax.annotation:javax.annotation-api:${javaxAnnotationVersion}",
    ]

    presentationTestDependencies = [
            mockito:            "org.mockito:mockito-core:${mockitoVersion}",
            dexmaker:           "com.google.dexmaker:dexmaker:${dexmakerVersion}",
            dexmakerMockito:    "com.google.dexmaker:dexmaker-mockito:${dexmakerVersion}",
            espresso:           "com.android.support.test.espresso:espresso-core:${espressoVersion}",
            testingSupportLib:  "com.android.support.test:testing-support-lib:${testingSupportLibVersion}",
    ]

    domainDependencies = [
            daggerCompiler:     "com.google.dagger:dagger-compiler:${daggerVersion}",
            dagger:             "com.google.dagger:dagger:${daggerVersion}",
            javaxAnnotation:    "javax.annotation:javax.annotation-api:${javaxAnnotationVersion}",
            androidAnnotations: "com.android.support:support-annotations:${androidAnnotationsVersion}",
            rxJava:             "io.reactivex:rxjava:${rxJavaVersion}",
            gson:               "com.google.code.gson:gson:${gsonVersion}",
    ]

    domainTestDependencies = [
            junit:              "junit:junit:${jUnitVersion}",
            mockito:            "org.mockito:mockito-core:${mockitoVersion}",
    ]

    dataDependencies = [
            daggerCompiler:     "com.google.dagger:dagger-compiler:${daggerVersion}",
            dagger:             "com.google.dagger:dagger:${daggerVersion}",
            okHttp:             "com.squareup.okhttp:okhttp:${okHttpVersion}",
            gson:               "com.google.code.gson:gson:${gsonVersion}",
            rxJava:             "io.reactivex:rxjava:${rxJavaVersion}",
            retrofitRxJava:     "com.squareup.retrofit:adapter-rxjava:${retrofitVersion}",
            rxAndroid:          "io.reactivex:rxandroid:${rxAndroidVersion}",
            javaxAnnotation:    "javax.annotation:javax.annotation-api:${javaxAnnotationVersion}",
            androidAnnotations: "com.android.support:support-annotations:${androidAnnotationsVersion}",
            supportV4:          "com.android.support:support-v4:${supportV4Version}",
            retrofit:           "com.squareup.retrofit:retrofit:${retrofitVersion}",
            retrofitConvertGson:"com.squareup.retrofit:converter-gson:${retrofitConvertGsonVersion}",
            greenDao:            "de.greenrobot:greendao:${greenDaoVersion}"
    ]

    dataTestDependencies = [
            junit:              "junit:junit:${jUnitVersion}",
            assertj:            "org.assertj:assertj-core:${assertJVersion}",
            mockito:            "org.mockito:mockito-core:${mockitoVersion}",
            robolectric:        "org.robolectric:robolectric:${robolectricVersion}",
    ]
}